@using Myshop.Web.Service
@{
    ViewData["Title"] = "All Orders";
    Layout = "~/Views/Shared/_Dashboard.cshtml";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Details</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">
    <style>
        .form-label {
            margin-bottom: 0.2rem; /* Adjust this value as needed */
        }
        /* Add any additional styles here */
    </style>
</head>
<body>

    <h1 class="text-center" style="color: blue; margin-bottom: 50px;">Order Details</h1>

    <div class="d-flex justify-content-between">
        <form id="orderForm" method="post" class="col-sm-8" asp-action="UpdateOrderDetails" asp-controller="Order">
            <input type="hidden" name="OrderHeader.Id" value="@Model.OrderHeader.Id" />

            @foreach (var field in new (string Label, string Name, string Value)[] {
            ("Name", "OrderHeader.AppUser.DisplayName", Model.OrderHeader.AppUser.DisplayName),
            ("Phone", "OrderHeader.AppUser.Phone", Model.OrderHeader.AppUser.Phone),
            ("Address", "OrderHeader.AppUser.Address", Model.OrderHeader.AppUser.Address),
            ("City", "OrderHeader.AppUser.City", Model.OrderHeader.AppUser.City),
            ("Email", "OrderHeader.AppUser.Email", Model.OrderHeader.AppUser.Email),
            ("Order Date", "OrderHeader.OrderDate", Model.OrderHeader.OrderDate.ToString("yyyy-MM-ddTHH:mm")),
            ("Carrier", "OrderHeader.Carrier", Model.OrderHeader.Carrier),
            ("Tracking Number", "OrderHeader.TrackingNumber", Model.OrderHeader.TrackingNumber),
            ("Session ID", "OrderHeader.SessionId", Model.OrderHeader.SessionId),
            ("Payment Intent ID", "OrderHeader.PaymentIntentId", Model.OrderHeader.PaymentIntentId),
            ("Payment Date", "OrderHeader.PaymentDate", Model.OrderHeader.PaymentDate.ToString("yyyy-MM-ddTHH:mm")),
            ("Payment Status", "OrderHeader.PaymentStatus", Model.OrderHeader.PaymentStatus)
            })
            {
                <div class="mb-1 row">
                    <label for="@field.Name" class="col-sm-2 col-form-label">@field.Label</label>
                    <div class="col-sm-5">
                        <input type="text" value="@field.Value" name="@field.Name" class="form-control order-field" id="@field.Name" required />
                    </div>
                </div>
            }

            <div class="text-center">
                <button type="submit" class="btn btn-success" id="saveChangesBtn"
                @(Model.OrderHeader.OrderStatus == SD.Proccessing ? "disabled" : "")>
                    Update Order
                </button>
            </div>
        </form>

        <div class="col-sm-4">
            <h5 class="text-center p-3" style="background-color:aqua">Order Summary</h5>
            <div class="list-group">
                <div class="">
                    <h5 class="text-center bg-light text-dark p-3 rounded shadow">
                        <span class="me-1">Order Status</span> - <span class="text-info ms-1">@Model.OrderHeader.OrderStatus</span>
                    </h5>
                </div>
                @foreach (var product in Model.OrderDetails)
                {
                    <div class="list-group-item d-flex justify-content-between align-items-start">
                        <div>
                            <h6 class="mb-1">@product.Product.Name</h6>
                            <h6 class="text-muted mb-0">Total: @($"{product.Product.Price * product.Count:C}")</h6>
                        </div>
                        <div>
                            <h6 class="text-success mb-0">@($"{product.Product.Price:C}")</h6>
                        </div>
                        <p class="mb-0">Quantity: @product.Count</p>
                    </div>
                }
            </div>
            <div class="mt-3">
                <h5 class="text-center bg-light text-dark p-3 rounded shadow">
                    <span class="me-5">Total</span>: <span class="text-danger ms-5">@($"{Model.OrderHeader.TotalPrice:C}")</span>
                </h5>
            </div>
            <div class="d-flex justify-content-center mt-3">
                @if (Model.OrderHeader.OrderStatus == SD.Approve)
                {
                    <form method="post" asp-action="StartProcess" class="me-2 process-form">
                        <input type="hidden" name="OrderHeader.Id" value="@Model.OrderHeader.Id" />
                        <button type="submit" class="btn btn-primary" id="startProcessBtn" disabled>Start Process</button>
                    </form>
                }
                @if (Model.OrderHeader.OrderStatus == SD.Proccessing)
                {
                    <form method="post" asp-action="StartShip" class="me-2 ship-form">
                        <input type="hidden" name="OrderHeader.Id" value="@Model.OrderHeader.Id" />
                        <button type="submit" class="btn btn-success" id="startShippingBtn" disabled>Start Shipping</button>
                    </form>
                }
                @if (Model.OrderHeader.OrderStatus != SD.Cancelled && Model.OrderHeader.OrderStatus != SD.Refund)
                {
                    <form method="post" asp-action="CancelOrder" class="cancel-form">
                        <input type="hidden" name="OrderHeader.Id" value="@Model.OrderHeader.Id" />
                        <button type="submit" class="btn btn-danger" id="cancelOrderBtn" disabled>Cancel Order</button>
                    </form>
                }
            </div>
        </div>
    </div>

    <!-- Toastr JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>

    <script>
        $(document).ready(function () {
            // Function to check if all input fields are filled
            function checkInputs() {
                let allFilled = true;
                $('.order-field').each(function () {
                    if ($(this).val().trim() === '') {
                        allFilled = false;
                    }
                });

                // Enable or disable buttons based on input fields' values
                $('#startProcessBtn').prop('disabled', !allFilled);
                $('#saveChangesBtn').prop('disabled', !allFilled || '@Model.OrderHeader.OrderStatus' == 'Processing');
                $('#startShippingBtn').prop('disabled', !allFilled);
                $('#cancelOrderBtn').prop('disabled', !allFilled);
            }

            // Bind input change event to check inputs
            $('.order-field').on('input', checkInputs);

            // Initial check on page load
            checkInputs();
        });
    </script>
</body>
</html>
